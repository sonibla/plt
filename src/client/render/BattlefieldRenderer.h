// Generated by dia2code
#ifndef RENDER__BATTLEFIELDRENDERER__H
#define RENDER__BATTLEFIELDRENDERER__H

#include <memory>
#include <vector>
#include <SFML/Graphics.hpp>

namespace state {
  class Battlefield;
};
namespace render {
  class ZoneRenderer;
};
namespace state {
  class IObserver;
};
namespace render {
  class PermanentRenderer;
}

#include "state/Battlefield.h"
#include "ZoneRenderer.h"
#include "state/IObserver.h"
#include "PermanentRenderer.h"

namespace render {

  /// class BattlefieldRenderer - 
  class BattlefieldRenderer : public render::ZoneRenderer, public state::IObserver {
    // Associations
    // Attributes
  private:
    std::weak_ptr<state::Battlefield> battlefield;
    std::vector<std::unique_ptr<PermanentRenderer>> permanents;
    // Operations
  public:
    BattlefieldRenderer (std::weak_ptr<state::Battlefield> battlefield);
    ~BattlefieldRenderer ();
    void update (state::IObservable* obj);
    
  private:
    virtual void draw (sf::RenderTarget &target, sf::RenderStates states) const;
    // Setters and Getters
  };

};

#endif
